title = "sis input"

[Job]
type = "MD"
    # Available options:
    #    "MD": Default.
    #    "DCD": Read an existing DCD file (specified by [Files.In] dcd) and calculate energies.
    #    "CHECK_FORCE": For debug. Check consistency between the energy and force routines.

[Files]
    [Files.In]
    ff = "./rna_cg1_para2.ff"
        # Force-field file. Required.

    fasta = "./beta-globin.fasta"
        # FASTA sequence file. Required.

    pdb_ini = "initial.pdb"
    xyz_ini = "initial.xyz"
        # File for initial structure. Only one of them is required.
        # Only the coordinates will be read from these files, 
        # and any sequence information therein will be ignored.

    dcd = "./trajectory.dcd"
        # DCD file to read. Required only if type = "DCD" in [Job].

    anneal = "./annealing_schedule.txt"
        # Annealing-schedule file.
        # Required only when opt_anneal > 0 in [Condition].

    bias_Rg = "./bias_Rg_schedule.txt"
        # Schedule file for bias_Rg.
        # Required only when potential = 'timed-flat-bottomed' in [Bias_Rg].

    restraint = "./restraint.txt"
        # Restraint file containing a list of pre-defined restraints.

    ## Specific secondary structure.
    ## If either 'ct' or 'bpseq' is given, only base pairs that constitute 
    ## the secondary structure are enabled.
    ct = "./test.ct"
        # CT (Connectivity Table) file
    bpseq = "./test.bpseq"
        # BPSEQ file (no comment line allowed)
    bpl = "./test.bpl"
        # Basepair list file (no comment line allowed)

    [Files.Out]
    prefix = "./test"
    types = ["bpcoef", "bp", "bpe", "bpall", "twz"]
        # Available options:
        # "bpcoef": bp parameters will be written.
        # "bp": bp energy trajectory in binary format.
        # "bpe": bp energy trajecotry in ASCII format.
        # "twz": information of tweezers (force values for Force_Ramp)

[Molecules]
    # (optional)
    # This [Molecules] block is required unless the system contains only linear RNA chains.
    # If this block is omitted, the number of chains is set equal to the number of chains 
    # in the FASTA file and all chains are assumed to be linear RNA.
n_chain = 2
1 = 'linearRNA'  # default
2 = 'circRNA'

[Replica]
nrep_temp = 8
nrep_force = 0
nrep_ion = 0
nrep_rg = 0

nstep_exchange = 10
nstep_save = 100

## Perform exchange? (true (default) or false)
exchange = true

    [Replica.Temperature]
    1 = 293.15
    2 = 303.15
    3 = 313.15
    4 = 323.15
    5 = 333.15
    6 = 343.15
    7 = 353.15
    8 = 363.15

    [Replica.Force]
    ## External force using Tweezers.Dual_Constant_Force
    1 = 0.0
    2 = 2.0
    3 = 4.0
    4 = 6.0
    5 = 8.0
    6 = 10.0
    7 = 12.0
    8 = 14.0

    [Replica.Ionic_strength]
    ## Ionic strength of the monovalent ions in molar (mol/L) units.
    1 = 0.02
    2 = 0.05
    3 = 0.10
    4 = 0.15
    5 = 0.20
    6 = 0.30
    7 = 0.50
    8 = 0.80

    [Replica.Rg]
    ## Rg in Angstrom. [Bias_Rg] is required when nrep_rg > 1.
    1 = 10.0
    2 = 12.0
    3 = 14.0
    4 = 16.0
    5 = 18.0
    6 = 20.0
    7 = 22.0
    8 = 24.0

[Condition]
tempK = 310.15
    # Specify the simulation temperature in Kelvin.
    # This line will be ignored if opt_anneal = 1.

rng_seed = 123
    # (optional, but highly recommended to set)
    # Seed value for the pseudorandom number generator.

    # Set a 64-bit integer. If omitted, it will be set based on SYSTEM_CLOCK.

opt_anneal = 0
    # (optional) flag for simulated annealing.
    # 0: No annealing (default)
    # 1: Annealing ("anneal" is required in [Files.In])

temp_independent = 0
    # (optional) temperature independent potential
    # 0: Use the original (temperature-dependent) potential. (default)
    # 1: Use temperature-independent potential. temp_ref is required.
tempK_ref = 328.15


[MD]
integrator = "GJF-2GJ"
    # GJF-2GJ: Langevin dynamics using GJF-2GJ thermostat
    #     L.F.G. Jensen, N. GrÃ¸nbech-Jensen (2019) Mol. Phys. DOI:10.1080/00268976.2019.1570369
    # Ermak-McCammon: Brownian dynamics
    #     D.L. Ermak, J.A. McCammon (1978) J. Chem. Phys. DOI:10.1063/1.436761

dt = 0.05
nstep = 500000
nstep_save = 500
nstep_save_rst = 500

neighbor_list_margin = 10.0
    # (optional) default is 10.0

viscosity_Pas = 0.00001
    # (optional) default is 0.00001
    # Viscosity in Pascal Second used in Langevin dynamics.

stop_wall_time_hour = 47.9
    # (optional, default: -1) Wall-clock time limit for the job.
    # The default is -1 thus no time limit.
    # If a positive value is specified, the job will be terminated once the wall time
    # reaches the limit value. A restart file (.rst) will be generated at the time.
    # The unit is hour and can be any positive real number, e.g. 0.25 for 15 minutes.
    # If the specified value is negative, no limit will be set.
    # It is recommended to set a slightly smaller value than the resource time allowed,
    # Since it may take some time for the program to exit normally, such as when saving files, 
    # it is recommended that you specify a slightly smaller value, e.g. 47.9 for 48-hour job.

nstep_check_stop = 10000
    # (optional, default: 10000) Frequency to check the wall time to stop. 
    # The value has to be a positive integer. If a value less than 1 is specified, 
    # then nstep_check_stop = 1 will be used (check evey step).
    # The simulation can also be stopped by placing an empty file named STOP_SIS at the same directory
    # specified in [Files.In] prefix.
    # e.g. if prefix = "./output/md", either ./output/stop_sis or ./output/STOP_SIS will terminate the job.

fix_com_origin = 0
    # (optional) Fix the translational motion of the molecule.
    # 0 : No operation (default)
    # 1 : Move the center of mass to the origin when output the coordinates.
    # This should not be used if there are more than one chains.

[Basepair]
model = 1
    # 1: The model by Nguyen, Hori, Thirumalai (2022) Nat. Chem.
    # 2: (obsolete)
    # 3: Same as 1 but not allowing isolated base pairs.
    # 4: Base pair potential U0 is calcualted by dG values of the nearest neighbour model.
    # 5: Base pair potential U0 is calcualted by dH and dS values of the nearest neighbour model.

min_loop = 3
    # Minimum loop size allowed. The default value is 3 if this option is omitted.
    # It is the number of nucleotides that must exist between a base pair.
    # E.g., if min_loop = 3, then (i) and (i+4) can form a base pair, whereas (i) and (i+3) cannot.

nstep_MC = 1
    # (optional) default is 1.
    # This variable specifies the frequency of Monte Carlo reorganisation of the base pair network.
    # The value has to be 0 or any positive integer. If nstep_MC = 0, there will be no MC procedure. 
    # If [Job] type = "DCD", any positive integer value of nstep_MC will be ignored and MC will be
    # performed for every frame (i.e. nstep_MC = 1). nstep_MC = 0 is still valid and MC will not be conducted.

max_bp_per_nt = 1
    # (optional) default is 1
    # Maximum number of base pairs simultaneously formed by one nucleotide.
    # The value has to be positive integer. Only valid when nstep_MC > 0.

[Electrostatic]
    # (optional)
    # If this section is given, electrostatic interaction is enabled.

ionic_strength = 0.1
    # Ionic strength of the monovalent-ions in molar units.

cutoff_type = 1
    # How to specify the cutoff distance for electrostatic interactions.
    #     = 1: Distance-based.
    #          The cutoff will be specified as distance in Angstrom. (default)
    #     = 2: Multiple of the Debye length. 
    #          The cutoff will be a factor to be multiplied by Debye length.

cutoff = 50.0
    # Either distance (cutoff_type = 1) or multiple (cutoff_type = 2),
    # depending on the choice of cutoff_type.

dummy_has_charge = false
    # (optional) default is false
    # If true, dummy particles (D) will have the same charge as normal RNA particles.
    # These charges can be individually disabled by the 'no_charge' option below.

no_charge = [1, 27]
    # (optional) array of positive integeres.
    # Particles having no charges.

length_per_charge = 4.38178046
    # Paremeter in ion-condensation theory in Angstrom.

exclude_covalent_bond_pairs = true
    # If true, no electrostatic interaction between covalent-bond pairs (i)-(i+1). (default true)
#exclude_covalent_angle_pairs = true
#    # If true, no electrostatic interaction between covalent-angle pairs (i)-(i+3). (default false)

[Progress]
    # (optional)
    # If this section is given, progress information will be output to STDOUT. 
step = 1000000

[PBC_box]
    # (optional)
    # If this section is given, the Periodic Boundary Condition (PBC) is enabled.
size = [809.972, 809.972, 809.972]
#x = 809.972
#y = 809.972
#z = 809.972
    # These 'x=', 'y=', 'z=' are an older way to specify the box size,
    # which is deprecated and will be removed in a future version.
    # Use size =[x, y, z] format.

resize_change = [ -0.1,  -0.1,  -0.1]
resize_target = [500.0, 500.0, 500.0]
resize_step = 1000

[Variable_box]
    # This option is deprecated and will be removed in a future version.
    # Use [PBC_box] resize_step, resize_change, and resize_target for the feature.
step = 1000
change_x = -1.0
change_y = -1.0
change_z = -1.0

[Stage]
    # (optional)
    # Stage potential
sigma = 10.0
epsilon = 1.2

[Freeze]
id_ranges = [[1, 5], [10,14]]

[Tweezers]
    [Tweezers.Dual_Constant_Force]
    id_pairs = [[1, 5],]
    forces_pN = [[5.0, 0.0, 0.0],]   # in pN

    [Tweezers.Force_Ramp]
    id_pairs = [[1, 27]]
    spring_const = [[0.0030, 0.0030],]   # in kcal/mol/(angstrom^2)
    trap_speed = [[0.0, 1.5e-6]]        # in angstrom per step
    ## In the Force_Ramp mode, a pair of particles (i, j) is specified by id_pairs = [[i, j],].
    ## The two particles are each trapped by tweezers with spring constants k_i and k_j 
    ## specified by spring_const = [[k_i, k_j],]. The positions of the two traps are initially 
    ## located at the same position as the particles i and j at time = 0 (xyz_i(0) and xyz_j(0)).
    ## The trap positions move along the simulation at the speed given by trap_speed = [[v_i, v_j],]. 
    ## The direction of movement is determined by the initial positions and is (xyz_j(0) - xyz_i(0)),
    ## i.e. the direction from xyz_i(0) to xyz_j(0).
    ## 'twz' output file will contain informaion of the extension and forces.

[Bias_SS]
force_pN = 20.0

[Bias_Rg]
potential = 'harmonic'
#potential = 'flat-bottomed'
#potential = 'timed-flat-bottomed'
k = 1.0
Rg0 = 12.0

